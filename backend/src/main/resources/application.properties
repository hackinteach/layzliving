# ===============================
# = API ROOT PATH
# ===============================
server.servlet.context-path=/api

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url = jdbc:mysql://${localhost}:${3306}/webapp_db?useUnicode=yes&characterEncoding=UTF-8&useSSL=false
#DB_HOST:
#DB_PORT:
# Username and password
spring.datasource.username = ${root}
#DB_USERNAME:
spring.datasource.password = ${Niceread15}
#DB_PASSWORD:

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle = true
spring.datasource.tomcat.validation-query= = SELECT 1
spring.jpa.properties.javax.persistence.validation.mode=none

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Show or not log for each sql query
spring.jpa.show-sql = false
# User JDBC as a driver
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update
# enable autoregistration of Jadira Usertypes
# spring.jpa.properties.jadira.usertype.autoRegisterUserTypes = true
# without the above line we did it manually with
# @Type(type = "org.jadira.usertype.dateandtime.joda.PersistentLocalDate")

